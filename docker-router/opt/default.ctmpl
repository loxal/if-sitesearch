{{$blue  := env "BLUE_NAME"}}
{{$green := env "GREEN_NAME"}}
{{$live  := file "/var/live"}}

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
 server_tokens off; # hide nginx version 

 upstream ifinder-search-service {
    least_conn;
        server sitesearch-search-service:9605;
        server sitesearch-search-service-1:9605;
        server sitesearch-search-service:9605 backup;
  }

  upstream blue {
    least_conn;
    {{range service $blue}}
        server {{.Address}}:{{.Port}} max_fails=3 fail_timeout=60 weight=1;
    {{else}}
        server if-sitesearch-blue:8001;
        server if-sitesearch-blue-1:8001;
        server if-sitesearch-green:8001 backup;
    {{end}}
  }

  upstream green {
    least_conn;
    {{range service $green}}
        server {{.Address}}:{{.Port}} max_fails=3 fail_timeout=60 weight=1;
    {{else}}
        server if-sitesearch-green:8001;
        server if-sitesearch-green-1:8001;
        server if-sitesearch-blue:8001 backup;
    {{end}}
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.sitesearch.cloud;

    include /etc/nginx/snippets/ssl.conf;

    location / {
        include /etc/nginx/snippets/cors-headers.conf;
        proxy_read_timeout 600; # required for long-lasting crawler calls

      {{if eq $live "blue"}}
        proxy_pass http://blue;
      {{else}}
        proxy_pass http://green;
      {{end}}
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name test.sitesearch.cloud;

    include /etc/nginx/snippets/ssl.conf;

    location / {
        include /etc/nginx/snippets/cors-headers.conf;

      {{if eq $live "blue"}}
        proxy_pass http://green;
      {{else}}
        proxy_pass http://blue;
      {{end}}
    }
  }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name main.sitesearch.cloud;

        include /etc/nginx/snippets/ssl.conf;

        location /status {
            stub_status on;
            access_log off;
        }

        location / {
            proxy_pass http://ifinder-search-service;
        }
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    resolver_timeout          5s;

    gzip on;
    gzip_types text/plain text/css application/xml application/json application/javascript;

    include /etc/nginx/conf.d/*.conf;
}